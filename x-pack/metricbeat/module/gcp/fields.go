// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gcp

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "gcp", asset.ModuleFieldsPri, AssetGcp); err != nil {
		panic(err)
	}
}

// AssetGcp returns asset data.
// This is the base64 encoded zlib format compressed contents of module/gcp.
func AssetGcp() string {
<<<<<<< HEAD
	return "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"
=======
	return "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"
>>>>>>> e61173f979 ([Metricbeat] gcp: add dataproc metricset (#30008))
}
